buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'com.github.dcendents.android-maven' version '2.1'
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'

ext {
    pdCorePath = System.getenv("PDCORE_PATH") ?: ""
    bintrayKey = System.getenv("BINTRAY_KEY") ?: ""
}

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a' // Same as PdCore
        }
        externalNativeBuild {
            cmake {
                arguments "-DPDCORE_PATH:STRING=${pdCorePath}"
                cppFlags ""
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    libraryVariants.all {
        it.generateBuildConfig.enabled = false
    }
}

def siteUrl = 'https://github.com/simonnorberg/dmach-externals'
def gitUrl = 'https://github.com/simonnorberg/dmach-externals.git'

version = '1.1.0'
group = 'net.simno.dmach'
archivesBaseName = 'dmach-externals'

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'dmach-externals'
                url siteUrl
                licenses {
                    license {
                        name 'BSD New'
                        url 'https://raw.githubusercontent.com/simonnorberg/dmach-externals/master/src/main/cpp/cyclone/LICENSE.txt'
                    }
                    license {
                        name 'GPL-2.0'
                        url 'https://raw.githubusercontent.com/simonnorberg/dmach-externals/master/src/main/cpp/zexy/LICENSE.txt'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = 'simonnorberg'
    setKey(bintrayKey)
    setConfigurations('archives')
    pkg {
        repo = 'maven'
        name = 'dmach-externals'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        publish = false
    }
}
