buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0-beta04'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

plugins {
    id 'com.github.dcendents.android-maven' version '2.1'
    id 'com.jfrog.bintray' version '1.8.4'
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 29
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
                arguments '-DANDROID_STL=c++_static'
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    packagingOptions {
        exclude 'lib/armeabi-v7a/libpd.so'
        exclude 'lib/arm64-v8a/libpd.so'
        exclude 'lib/x86/libpd.so'
        exclude 'lib/x86_64/libpd.so'
    }
    libraryVariants.all {
        it.generateBuildConfigProvider.configure { task ->
            task.enabled = false
        }
    }
}

def siteUrl = 'https://github.com/simonnorberg/dmach-externals'
def gitUrl = 'https://github.com/simonnorberg/dmach-externals.git'

version = '1.2.4'
group = 'net.simno.dmach'
archivesBaseName = 'dmach-externals'

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'dmach-externals'
                url siteUrl
                licenses {
                    license {
                        name 'BSD New'
                        url 'https://raw.githubusercontent.com/electrickery/pd-miXedSon/master/LICENSE.txt'
                    }
                    license {
                        name 'GPL-2.0'
                        url 'https://git.iem.at/pd/zexy/raw/master/LICENSE.txt'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    setArchiveClassifier('sources')
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    setArchiveClassifier('javadoc')
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = 'simonnorberg'
    setKey(System.getenv("BINTRAY_KEY"))
    setConfigurations('archives')
    pkg {
        repo = 'maven'
        name = 'dmach-externals'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        publish = false
    }
}
